"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var vite_1 = require("vite");
var plugin_react_1 = __importDefault(require("@vitejs/plugin-react"));
var path_1 = __importDefault(require("path"));
var vite_plugin_runtime_error_modal_1 = __importDefault(require("@replit/vite-plugin-runtime-error-modal"));
var vite_plugin_pwa_1 = require("vite-plugin-pwa");
var vite_2 = __importDefault(require("@tailwindcss/vite"));
var fs_1 = require("fs");
var glob_1 = require("glob");
function secureSourceMaps() {
    return {
        'name': 'secure-source-maps',
        'apply': 'build',
        'closeBundle': function () {
            return __awaiter(this, void 0, void 0, function () {
                var distDir, publicDir, mapsDir, mapFiles, _i, mapFiles_1, file, from, to, bundleFiles, _a, bundleFiles_1, file, filePath, code;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            distDir = path_1.default.resolve(import.meta.dirname, 'dist');
                            publicDir = path_1.default.join(distDir, 'public');
                            mapsDir = path_1.default.join(distDir, 'maps');
                            return [4 /*yield*/, fs_1.promises.mkdir(mapsDir, { 'recursive': true })];
                        case 1:
                            _b.sent();
                            return [4 /*yield*/, (0, glob_1.glob)('**/*.map', { 'cwd': publicDir })];
                        case 2:
                            mapFiles = _b.sent();
                            _i = 0, mapFiles_1 = mapFiles;
                            _b.label = 3;
                        case 3:
                            if (!(_i < mapFiles_1.length)) return [3 /*break*/, 6];
                            file = mapFiles_1[_i];
                            from = path_1.default.join(publicDir, file);
                            to = path_1.default.join(mapsDir, path_1.default.basename(file));
                            return [4 /*yield*/, fs_1.promises.rename(from, to)];
                        case 4:
                            _b.sent();
                            _b.label = 5;
                        case 5:
                            _i++;
                            return [3 /*break*/, 3];
                        case 6: return [4 /*yield*/, (0, glob_1.glob)('**/*.{js,css}', { 'cwd': publicDir })];
                        case 7:
                            bundleFiles = _b.sent();
                            _a = 0, bundleFiles_1 = bundleFiles;
                            _b.label = 8;
                        case 8:
                            if (!(_a < bundleFiles_1.length)) return [3 /*break*/, 12];
                            file = bundleFiles_1[_a];
                            filePath = path_1.default.join(publicDir, file);
                            return [4 /*yield*/, fs_1.promises.readFile(filePath, 'utf8')];
                        case 9:
                            code = _b.sent();
                            return [4 /*yield*/, fs_1.promises.writeFile(filePath, code.replace(/\n?\/\/\# sourceMappingURL=.*\.map\n?/g, '\n'), 'utf8')];
                        case 10:
                            _b.sent();
                            _b.label = 11;
                        case 11:
                            _a++;
                            return [3 /*break*/, 8];
                        case 12: return [2 /*return*/];
                    }
                });
            });
        }
    };
}
exports.default = (0, vite_1.defineConfig)({
    'plugins': __spreadArray([
        (0, plugin_react_1.default)(),
        (0, vite_2.default)(),
        (0, vite_plugin_runtime_error_modal_1.default)(),
        (0, vite_plugin_pwa_1.VitePWA)({
            'registerType': 'autoUpdate',
            'workbox': {
                'globPatterns': ['**/*.{js,css,html,ico,png,svg,woff2}'],
                'runtimeCaching': [
                    {
                        'urlPattern': /\.(png|jpg|jpeg|svg|gif|webp)$/,
                        'handler': 'CacheFirst',
                        'options': {
                            'cacheName': 'image-cache',
                            'expiration': {
                                'maxEntries': 200,
                                'maxAgeSeconds': 60 * 60 * 24 * 30 // 30 days
                            }
                        }
                    }
                ]
            },
            'includeAssets': ['favicon.ico', 'apple-touch-icon.png', 'masked-icon.svg'],
            'manifest': {
                'name': 'HRMS Elite - نظام إدارة الموارد البشرية',
                'short_name': 'HRMS Elite',
                'description': 'نظام إدارة الموارد البشرية الشامل والمتقدم',
                'theme_color': '#2563eb',
                'background_color': '#ffffff',
                'display': 'standalone',
                'orientation': 'portrait-primary',
                'start_url': '/',
                'scope': '/',
                'lang': 'ar',
                'dir': 'rtl',
                'categories': ['business', 'productivity', 'utilities'],
                'icons': [
                    {
                        'src': '/icon-72x72.png',
                        'sizes': '72x72',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    },
                    {
                        'src': '/icon-96x96.png',
                        'sizes': '96x96',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    },
                    {
                        'src': '/icon-128x128.png',
                        'sizes': '128x128',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    },
                    {
                        'src': '/icon-144x144.png',
                        'sizes': '144x144',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    },
                    {
                        'src': '/icon-152x152.png',
                        'sizes': '152x152',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    },
                    {
                        'src': '/icon-192x192.png',
                        'sizes': '192x192',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    },
                    {
                        'src': '/icon-384x384.png',
                        'sizes': '384x384',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    },
                    {
                        'src': '/icon-512x512.png',
                        'sizes': '512x512',
                        'type': 'image/png',
                        'purpose': 'maskable any'
                    }
                ],
                'shortcuts': [
                    {
                        'name': 'لوحة التحكم',
                        'short_name': 'لوحة التحكم',
                        'description': 'الوصول السريع للوحة التحكم الرئيسية',
                        'url': '/dashboard',
                        'icons': [
                            {
                                'src': '/shortcut-dashboard.png',
                                'sizes': '96x96'
                            }
                        ]
                    },
                    {
                        'name': 'الموظفين',
                        'short_name': 'الموظفين',
                        'description': 'إدارة بيانات الموظفين',
                        'url': '/employees',
                        'icons': [
                            {
                                'src': '/shortcut-employees.png',
                                'sizes': '96x96'
                            }
                        ]
                    },
                    {
                        'name': 'الحضور',
                        'short_name': 'الحضور',
                        'description': 'تسجيل الحضور والانصراف',
                        'url': '/attendance',
                        'icons': [
                            {
                                'src': '/shortcut-attendance.png',
                                'sizes': '96x96'
                            }
                        ]
                    },
                    {
                        'name': 'التقارير',
                        'short_name': 'التقارير',
                        'description': 'عرض التقارير والإحصائيات',
                        'url': '/reports',
                        'icons': [
                            {
                                'src': '/shortcut-reports.png',
                                'sizes': '96x96'
                            }
                        ]
                    }
                ],
                'screenshots': [
                    {
                        'src': '/screenshot-wide.png',
                        'sizes': '1024x593',
                        'type': 'image/png',
                        'form_factor': 'wide',
                        'label': 'لوحة التحكم الرئيسية'
                    },
                    {
                        'src': '/screenshot-narrow.png',
                        'sizes': '540x720',
                        'type': 'image/png',
                        'form_factor': 'narrow',
                        'label': 'واجهة التطبيق المحمول'
                    }
                ]
            }
        }),
        secureSourceMaps()
    ], (process.env.NODE_ENV !== 'production' &&
        process.env.REPL_ID !== undefined
        ? [
            await Promise.resolve().then(function () { return __importStar(require('@replit/vite-plugin-cartographer')); }).then(function (m) {
                return m.cartographer();
            })
        ]
        : []), true),
    'resolve': {
        'alias': {
            '@': path_1.default.resolve(import.meta.dirname, 'client', 'src'),
            '@shared': path_1.default.resolve(import.meta.dirname, 'shared'),
            '@assets': path_1.default.resolve(import.meta.dirname, 'assets'),
            '@components': path_1.default.resolve(import.meta.dirname, 'client', 'src', 'components'),
            '@pages': path_1.default.resolve(import.meta.dirname, 'client', 'src', 'pages'),
            '@hooks': path_1.default.resolve(import.meta.dirname, 'client', 'src', 'hooks'),
            '@stores': path_1.default.resolve(import.meta.dirname, 'client', 'src', 'stores'),
            '@services': path_1.default.resolve(import.meta.dirname, 'client', 'src', 'services'),
            '@lib': path_1.default.resolve(import.meta.dirname, 'client', 'src', 'lib'),
            '@types': path_1.default.resolve(import.meta.dirname, 'client', 'src', 'types'),
            '@tests': path_1.default.resolve(import.meta.dirname, 'client', 'tests')
        }
    },
    'root': path_1.default.resolve(import.meta.dirname, 'client'),
    'build': {
        'outDir': path_1.default.resolve(import.meta.dirname, 'dist/public'),
        'emptyOutDir': true,
        // ✅ تحسين إعدادات Vite للأداء - المرحلة الثالثة
        'target': 'esnext',
        'minify': 'terser',
        'sourcemap': false,
        'reportCompressedSize': true,
        // ✅ تحسين chunkSizeWarningLimit - زيادة الحد لتحسين الأداء
        'chunkSizeWarningLimit': 2000,
        'terserOptions': {
            'compress': {
                // ✅ تحسين drop_console - إزالة جميع console statements في الإنتاج
                'drop_console': process.env.NODE_ENV === 'production',
                'drop_debugger': true,
                'pure_funcs': process.env.NODE_ENV === 'production' ? [
                    'console.log',
                    'console.info',
                    'console.debug',
                    'console.warn',
                    'console.error',
                    'console.trace',
                    'console.table',
                    'console.group',
                    'console.groupEnd',
                    'console.time',
                    'console.timeEnd',
                    'console.count',
                    'console.countReset',
                    'console.clear',
                    'console.assert',
                    'console.dir',
                    'console.dirxml',
                    'console.groupCollapsed',
                    'console.profile',
                    'console.profileEnd',
                    'console.timeLog',
                    'console.timeline',
                    'console.timelineEnd',
                    'console.trace',
                    'console.warn'
                ] : [],
                'passes': 3, // زيادة عدد المرات لتحسين الضغط
                'unsafe': true,
                'unsafe_comps': true,
                'unsafe_Function': true,
                'unsafe_math': true,
                'unsafe_proto': true,
                'unsafe_regexp': true,
                'unsafe_undefined': true,
                // تحسينات إضافية للضغط
                'collapse_vars': true,
                'reduce_vars': true,
                'hoist_funs': true,
                'hoist_vars': true,
                'if_return': true,
                'join_vars': true,
                'sequences': true,
                'side_effects': true,
                'unused': true,
                'dead_code': true,
                'pure_getters': true,
                'conditionals': true,
                'comparisons': true,
                'evaluate': true,
                'booleans': true,
                'loops': true,
                'toplevel': true,
                'typeofs': true,
                'global_defs': {
                    '@alert': 'console.log'
                }
            },
            'mangle': {
                'safari10': true,
                // تحسين mangling
                'toplevel': true,
                'properties': {
                    'regex': /^_/
                }
            },
            'format': {
                'comments': false
            }
        },
        'rollupOptions': {
            'output': {
                // ✅ تحسين code splitting مع manualChunks متقدم ومحسن
                'manualChunks': function (id) {
                    // Vendor chunks - تحسين تجميع المكتبات
                    if (id.includes('node_modules')) {
                        // React ecosystem - تجميع React في chunk منفصل
                        if (id.includes('react') || id.includes('react-dom') || id.includes('react-is')) {
                            return 'react-core';
                        }
                        if (id.includes('react-router') || id.includes('wouter')) {
                            return 'routing';
                        }
                        // UI Libraries - تجميع مكتبات UI
                        if (id.includes('@radix-ui')) {
                            return 'radix-ui';
                        }
                        if (id.includes('framer-motion')) {
                            return 'animations';
                        }
                        if (id.includes('lucide-react') || id.includes('react-icons')) {
                            return 'icons';
                        }
                        // Data Management - تجميع مكتبات إدارة البيانات
                        if (id.includes('@tanstack')) {
                            return 'data-management';
                        }
                        if (id.includes('zustand')) {
                            return 'state-management';
                        }
                        if (id.includes('react-hook-form') || id.includes('@hookform')) {
                            return 'forms';
                        }
                        // Charts and Visualization - تجميع مكتبات الرسوم البيانية
                        if (id.includes('recharts') || id.includes('d3')) {
                            return 'charts';
                        }
                        // Date and Time - تجميع مكتبات التاريخ والوقت
                        if (id.includes('date-fns') || id.includes('dayjs')) {
                            return 'date-utils';
                        }
                        // Utilities - تجميع المكتبات المساعدة
                        if (id.includes('clsx') || id.includes('classnames') || id.includes('tailwind-merge')) {
                            return 'utils';
                        }
                        // HTTP and API - تجميع مكتبات HTTP
                        if (id.includes('axios') || id.includes('fetch') || id.includes('ky')) {
                            return 'http-client';
                        }
                        // Validation - تجميع مكتبات التحقق
                        if (id.includes('zod') || id.includes('yup') || id.includes('joi')) {
                            return 'validation';
                        }
                        // AI and ML Libraries - تجميع مكتبات الذكاء الاصطناعي
                        if (id.includes('ai') || id.includes('openai') || id.includes('anthropic')) {
                            return 'ai-libraries';
                        }
                        // File handling - تجميع مكتبات التعامل مع الملفات
                        if (id.includes('file-saver') || id.includes('jszip') || id.includes('pdf-lib')) {
                            return 'file-handling';
                        }
                        // Default vendor chunk for other node_modules
                        return 'vendor';
                    }
                    // Application chunks based on features - تحسين تجميع المكونات
                    if (id.includes('/pages/')) {
                        // Core pages - الصفحات الأساسية
                        if (id.includes('dashboard') || id.includes('home')) {
                            return 'core-pages';
                        }
                        if (id.includes('employees') || id.includes('employee')) {
                            return 'employee-pages';
                        }
                        if (id.includes('attendance') || id.includes('time')) {
                            return 'attendance-pages';
                        }
                        if (id.includes('documents') || id.includes('files')) {
                            return 'document-pages';
                        }
                        if (id.includes('reports') || id.includes('analytics')) {
                            return 'report-pages';
                        }
                        if (id.includes('settings') || id.includes('config')) {
                            return 'settings-pages';
                        }
                        // AI and Advanced features - ميزات الذكاء الاصطناعي
                        if (id.includes('ai-') || id.includes('chatbot') || id.includes('analytics')) {
                            return 'ai-features';
                        }
                        // Authentication - صفحات المصادقة
                        if (id.includes('login') || id.includes('auth') || id.includes('register')) {
                            return 'auth-pages';
                        }
                        // Other pages
                        return 'other-pages';
                    }
                    // Component chunks - تحسين تجميع المكونات
                    if (id.includes('/components/')) {
                        if (id.includes('/ui/')) {
                            return 'ui-components';
                        }
                        if (id.includes('/shared/')) {
                            return 'shared-components';
                        }
                        if (id.includes('/optimized/')) {
                            return 'optimized-components';
                        }
                        if (id.includes('/ai/')) {
                            return 'ai-components';
                        }
                        if (id.includes('/forms/')) {
                            return 'form-components';
                        }
                        if (id.includes('/charts/')) {
                            return 'chart-components';
                        }
                        if (id.includes('/tables/')) {
                            return 'table-components';
                        }
                        if (id.includes('/modals/')) {
                            return 'modal-components';
                        }
                        return 'other-components';
                    }
                    // Service and utility chunks
                    if (id.includes('/stores/')) {
                        return 'stores';
                    }
                    if (id.includes('/services/')) {
                        return 'services';
                    }
                    if (id.includes('/hooks/')) {
                        return 'hooks';
                    }
                    if (id.includes('/utils/') || id.includes('/lib/')) {
                        return 'utilities';
                    }
                    if (id.includes('/types/')) {
                        return 'types';
                    }
                    // Default chunk for other files
                    return 'app';
                },
                // تحسين أسماء الملفات مع hashing محسن
                'chunkFileNames': function (_chunkInfo) {
                    return 'js/[name]-[hash].js';
                },
                'entryFileNames': 'js/[name]-[hash].js',
                'assetFileNames': function (assetInfo) {
                    var _a;
                    var name = (_a = assetInfo.name) !== null && _a !== void 0 ? _a : 'asset';
                    var info = name.split('.');
                    var ext = info[info.length - 1];
                    if ((/\.(css)$/).test(name)) {
                        return "css/[name]-[hash].".concat(ext);
                    }
                    if ((/\.(png|jpe?g|svg|gif|tiff|bmp|ico|webp)$/i).test(name)) {
                        return "images/[name]-[hash].".concat(ext);
                    }
                    if ((/\.(woff2?|eot|ttf|otf)$/i).test(name)) {
                        return "fonts/[name]-[hash].".concat(ext);
                    }
                    if ((/\.(mp4|webm|ogg|mp3|wav|flac|aac)$/i).test(name)) {
                        return "media/[name]-[hash].".concat(ext);
                    }
                    return "assets/[name]-[hash].".concat(ext);
                },
                // تحسين تجميع الكود
                'compact': true,
                // تحسين source maps
                // تحسين exports
                'exports': 'named',
                // تحسين globals
                'globals': {
                    'react': 'React',
                    'react-dom': 'ReactDOM',
                    'react-router-dom': 'ReactRouterDOM'
                }
            },
            // تحسين tree shaking - إزالة الكود غير المستخدم
            'treeshake': {
                'propertyReadSideEffects': false,
                'unknownGlobalSideEffects': false,
                'tryCatchDeoptimization': false,
                'moduleSideEffects': function (id) {
                    // تحديد الملفات التي لها side effects
                    return id.includes('polyfill') ||
                        id.includes('global') ||
                        id.includes('css') ||
                        id.includes('style');
                }
            },
            'external': ['ai'],
            // تحسين cache
            'cache': true,
            // تحسين watch
            'watch': process.env.NODE_ENV === 'development' ? {
                'include': 'src/**',
                'exclude': 'node_modules/**'
            } : false
        }
    },
    'server': {
        'port': 5173,
        'host': 'localhost',
        'strictPort': false,
        'fs': {
            'strict': true,
            'deny': ['**/.*']
        },
        // تحسين أداء التطوير
        'hmr': {
            'overlay': true,
            'port': 24678,
            'host': 'localhost'
        },
        // تحسين headers
        'headers': {
            'X-Content-Type-Options': 'nosniff',
            'X-Frame-Options': 'DENY',
            // إزالة X-XSS-Protection - الحماية تتم عبر CSP
        }
    },
    // تحسين optimizeDeps - تحسين pre-bundling
    'optimizeDeps': {
        'include': [
            'react',
            'react-dom',
            'react/jsx-runtime',
            'wouter',
            '@tanstack/react-query',
            'react-hook-form',
            '@hookform/resolvers',
            'date-fns',
            'clsx',
            'tailwind-merge',
            'framer-motion',
            'zustand',
            'lucide-react',
            'recharts',
            'axios',
            'zod',
            'react-router-dom'
        ],
        'exclude': ['@radix-ui/react-icons', 'ai'],
        // تحسين pre-bundling
        'force': process.env.NODE_ENV === 'development',
        // تحسين esbuild options
        'esbuildOptions': {
            'target': 'esnext',
            'supported': {
                'bigint': true
            },
            'plugins': []
        }
    },
    // تحسين CSS
    'css': {
        'devSourcemap': process.env.NODE_ENV === 'development',
        // تحسين CSS modules
        'modules': {
            'localsConvention': 'camelCase',
            'generateScopedName': process.env.NODE_ENV === 'development'
                ? '[name]__[local]___[hash:base64:5]'
                : '[hash:base64:8]'
        },
        // تحسين PostCSS
    },
    // تحسينات إضافية للأداء
    'define': {
        '__DEV__': process.env.NODE_ENV === 'development',
        '__PROD__': process.env.NODE_ENV === 'production',
        '__VERSION__': JSON.stringify((_a = process.env.npm_package_version) !== null && _a !== void 0 ? _a : '1.0.0'),
        '__BUILD_TIME__': JSON.stringify(new Date().toISOString()),
        // تحسين React
        'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),
        'global': 'globalThis'
    },
    // تحسين cache
    'cacheDir': '.vite',
    // تحسين preview
    'preview': {
        'port': 4173,
        'strictPort': true,
        'host': true,
        // تحسين headers للـ preview
        'headers': {
            'X-Content-Type-Options': 'nosniff',
            'X-Frame-Options': 'DENY',
            // إزالة X-XSS-Protection - الحماية تتم عبر CSP
        }
    },
    // تحسينات إضافية
    'esbuild': {
        'jsx': 'automatic',
        'target': 'esnext',
        'supported': {
            'bigint': true
        },
        'legalComments': 'none',
        'charset': 'utf8'
    },
    // تحسين worker
    'worker': {
        'format': 'es'
    }
});
